#include <windows.h>
#include <winDNS.h>

QWORD make_ip(QWORD* block_64)
{
	QWORD ip = 0;

	ip = ip | ((*block_64 & 0x40) >> 6 - 0);                         // 58
	ip = ip | ((*block_64 & 0x4000) >> 14 - 1);                      // 50
	ip = ip | ((*block_64 & 0x400000) >> 22 - 2);                    // 42
	ip = ip | ((*block_64 & 0x40000000) >> 30 - 3);                 // 34
	ip = ip | ((*block_64 & 0x4000000000) >> 38 - 4);               // 26
	ip = ip | ((*block_64 & 0x400000000000) >> 46 - 5);             // 18
	ip = ip | ((*block_64 & 0x40000000000000) >> 54 - 6);           // 10
	ip = ip | ((*block_64 & 0x4000000000000000) >> 62 - 7);          // 2

	ip = ip | ((*block_64 & 0x10) << 8-4 );                         // 60
	ip = ip | ((*block_64 & 0x1000) >> 12 - 9);                      // 52
	ip = ip | ((*block_64 & 0x100000) >> 20 - 10);                   // 44
	ip = ip | ((*block_64 & 0x10000000) >> 28 - 11);                // 36
	ip = ip | ((*block_64 & 0x1000000000) >> 36 - 12);              // 28
	ip = ip | ((*block_64 & 0x100000000000) >> 44 - 13);            // 20
	ip = ip | ((*block_64 & 0x10000000000000) >> 52 - 14);          // 12
	ip = ip | ((*block_64 & 0x1000000000000000) >> 60 - 15);        // 4

	ip = ip | ((*block_64 & 0x4) << 16 - 2);                         // 62
	ip = ip | ((*block_64 & 0x400) << 17 - 10);                      // 54
	ip = ip | ((*block_64 & 0x40000) >> 18 - 18);                    // 46
	ip = ip | ((*block_64 & 0x4000000) >> 26 - 19);                 // 38
	ip = ip | ((*block_64 & 0x400000000) >> 34 - 20);               // 30
	ip = ip | ((*block_64 & 0x40000000000) >> 42 - 21);             // 22
	ip = ip | ((*block_64 & 0x4000000000000) >> 50 - 22);            // 14
	ip = ip | ((*block_64 & 0x400000000000000) >> 58 - 23);          // 6

	ip = ip | ((*block_64 & 0x1) << 24);                         // 64
	ip = ip | ((*block_64 & 0x100) << 25 - 8);                       // 56
	ip = ip | ((*block_64 & 0x10000) << 26 -16);                    // 48
	ip = ip | ((*block_64 & 0x1000000) <<27 - 24);                 // 40
	ip = ip | ((*block_64 & 0x100000000) >> 32 - 28);               // 32
	ip = ip | ((*block_64 & 0x10000000000) >> 40 - 29);             // 24
	ip = ip | ((*block_64 & 0x1000000000000) >> 48 - 30);            // 16
	ip = ip | ((*block_64 & 0x100000000000000) >> 56 - 31);         // 8

	ip = ip | ((*block_64 & 0x80) << 32 - 7);                        // 57
	ip = ip | ((*block_64 & 0x8000) << 33 - 15);                     // 49
	ip = ip | ((*block_64 & 0x800000) << 34 - 23);                   // 41
	ip = ip | ((*block_64 & 0x80000000) << 35 - 31);                // 33
	ip = ip | ((*block_64 & 0x8000000000) >> 39 - 36);              // 25
	ip = ip | ((*block_64 & 0x800000000000) >> 47 - 37);            // 17
	ip = ip | ((*block_64 & 0x80000000000000) >> 55 - 38);          // 9
	ip = ip | ((*block_64 & 0x8000000000000000) >> 63 - 39);        // 1

	ip = ip | ((*block_64 & 0x20) << 40 - 5);                        // 59
	ip = ip | ((*block_64 & 0x2000) <<41 - 13);                     // 51
	ip = ip | ((*block_64 & 0x200000) << 42 - 21);                   // 43
	ip = ip | ((*block_64 & 0x20000000) <<43 - 29);                // 35
	ip = ip | ((*block_64 & 0x2000000000) << 44 - 37);              // 27
	ip = ip | ((*block_64 & 0x200000000000) >> 45 - 45);            // 19
	ip = ip | ((*block_64 & 0x20000000000000) >> 53 - 46);          // 11
	ip = ip | ((*block_64 & 0x2000000000000000) >> 61 - 47);        // 3

	ip = ip | ((*block_64 & 0x8) << 48 - 3);                         // 61
	ip = ip | ((*block_64 & 0x800) << 49 - 11);                      // 53
	ip = ip | ((*block_64 & 0x80000) << 50 - 19);                    // 45
	ip = ip | ((*block_64 & 0x8000000) << 51 - 27);                 // 37
	ip = ip | ((*block_64 & 0x800000000) << 52 - 35);                // 29
	ip = ip | ((*block_64 & 0x80000000000) <<53 - 43);             // 21
	ip = ip | ((*block_64 & 0x8000000000000) << 54 - 51);            // 13
	ip = ip | ((*block_64 & 0x800000000000000) >> 59 - 55);          // 5

	ip = ip | ((*block_64 & 0x2) << 56 - 1);                         // 63
	ip = ip | ((*block_64 & 0x200) << 57 - 9);                       // 55
	ip = ip | ((*block_64 & 0x20000) << 58 - 17);                    // 47
	ip = ip | ((*block_64 & 0x2000000) << 59 - 25);                  // 39
	ip = ip | ((*block_64 & 0x200000000) << 60 - 33);               // 31
	ip = ip | ((*block_64 & 0x20000000000) << 61 - 41);             // 23
	ip = ip | ((*block_64 & 0x2000000000000) << 62 - 49);           // 15
	ip = ip | ((*block_64 & 0x200000000000000) << 63 - 57);         // 7

	return ip;
}

void split_ip(QWORD ip)
{
	// Преобразуем 32-битный h-буфер; отбрасываем последние 32 бита
	DWORD h = ip >> 32;
	

	// Преобразуем 32-битный l-буфер; отбрасываем первые 32 бита
	
	DWORD l = (ip << 32) >> 32;
	
}

void ecb_cipher(BYTE* plain_text)
{
	QWORD ip_test = 0xFFFFFFFFFFFFFFFF;
	make_ip(&ip_test);
	QWORD split_ip_test = 0xAAAAAAAABBBBBBBB;
	split_ip(split_ip_test);
	
}